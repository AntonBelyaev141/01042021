#Область Доработка_1_НеТиповойРасчетНочныхПраздничных_Доработка_8_ВозможноВыбратьДоплатуЗаНочныеПраздничныеВДокументеРазовоеНачисление
//1АБ Беляев 04.07.2021 + Доработка 4 "Нетиповой расчет ночных / праздничных " / Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
&ИзменениеИКонтроль("ДополнитьСтрокиРасчета")
Процедура АБ_ДополнитьСтрокиРасчета(Форма, ОписаниеДокумента, ОписаниеТаблицы, ИдентификаторыСтрок, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей)

	ИмяТаблицы = ОписаниеТаблицы.ИмяТаблицы;
	ДанныеНачислений = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеТаблицы.ПутьКДанным);

	Если ИдентификаторыСтрок = Неопределено Тогда
		СтрокиРасчета = ДанныеНачислений;
	Иначе
		СтрокиРасчета = Новый Массив;
		Для Каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
			СтрокаРасчета = ДанныеНачислений.НайтиПоИдентификатору(ИдентификаторСтроки);
			Если СтрокаРасчета <> Неопределено Тогда
				СтрокиРасчета.Добавить(СтрокаРасчета);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;

	Если СтрокиРасчета.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	

	ВидыРасчета = Новый Массив;
	Если Не ОписаниеТаблицы.СодержитПолеВидРасчета Тогда
		ВидыРасчета.Добавить(Форма.Объект[ОписаниеТаблицы.ИмяРеквизитаВидРасчета]);
	Иначе
		ВидыРасчета = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРасчета, ОписаниеТаблицы.ИмяРеквизитаВидРасчета); 
	КонецЕсли;
	ВидыРасчетаИнфо = ЗарплатаКадрыРасширенный.ИнформацияОВидахРасчета(ВидыРасчета);

	МесяцНачисления = Форма.Объект[ОписаниеДокумента.МесяцНачисленияИмя];
	Если Форма.Объект.Свойство("Организация") Тогда
		Организация = Форма.Объект.Организация;
	КонецЕсли;

	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(МесяцНачисления, Организация);
	Если ОписаниеДокумента.УдержанияИмя = ИмяТаблицы
		Или ОписаниеДокумента.УдержанияПерерасчетИмя = ИмяТаблицы Тогда
		ТаблицаРасчета = МенеджерРасчета.ТаблицаУдержаний();
	Иначе
		ТаблицаРасчета = МенеджерРасчета.ТаблицаНачислений();
	КонецЕсли;

	СоответствиеСтрок = Новый Соответствие;
	Для Каждого СтрокаРасчета Из СтрокиРасчета Цикл
		НоваяСтрока = ТаблицаРасчета.Добавить();
		СоответствиеСтрок.Вставить(НоваяСтрока, СтрокаРасчета);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасчета);
		НоваяСтрока.Организация = Организация;
		// Если сотрудник указан в шапке.
		Если Не ОписаниеТаблицы.СодержитПолеСотрудник Тогда
			НоваяСтрока.Сотрудник = Форма.Объект[ОписаниеТаблицы.ИмяРеквизитаСотрудник];
		КонецЕсли;
		// Вид расчета может быть указан в шапке.
		Если Не ОписаниеТаблицы.СодержитПолеВидРасчета Тогда
			НоваяСтрока.Начисление = Форма.Объект[ОписаниеТаблицы.ИмяРеквизитаВидРасчета];
		КонецЕсли;
		// Период может не использоваться, тогда полей нет в таблице, их нужно получать 
		// - по периоду, если он указан в шапке
		// - по периоду регистрации.
		Если ОписаниеТаблицы.ИмяРеквизитаДатаНачала = Неопределено Тогда
			Если ОписаниеТаблицы.ИмяРеквизитаПериод <> Неопределено Тогда
				НоваяСтрока.ДатаНачала = НачалоМесяца(Форма.Объект[ОписаниеТаблицы.ИмяРеквизитаПериод]);
			КонецЕсли; 
			Если ОписаниеДокумента.ПериодДействияВШапке И ОписаниеДокумента.ДатаНачалаИмя <> Неопределено Тогда
				НоваяСтрока.ДатаНачала = Форма.Объект[ОписаниеДокумента.ДатаНачалаИмя];
			КонецЕсли;
		КонецЕсли;
		Если ОписаниеТаблицы.ИмяРеквизитаДатаОкончания = Неопределено Тогда
			Если ОписаниеТаблицы.ИмяРеквизитаПериод <> Неопределено Тогда
				НоваяСтрока.ДатаОкончания = КонецМесяца(Форма.Объект[ОписаниеТаблицы.ИмяРеквизитаПериод]);
			КонецЕсли; 
			Если ОписаниеДокумента.ПериодДействияВШапке И ОписаниеДокумента.ДатаОкончанияИмя <> Неопределено Тогда
				НоваяСтрока.ДатаОкончания = Форма.Объект[ОписаниеДокумента.ДатаОкончанияИмя];
			КонецЕсли;
		КонецЕсли;

		Если ОписаниеДокумента.УдержанияИмя = ИмяТаблицы
			Или ОписаниеДокумента.УдержанияПерерасчетИмя = ИмяТаблицы
			Или Не ЗначениеЗаполнено(НоваяСтрока.Начисление) Тогда

			Продолжить;
		КонецЕсли;

		ЗначенияРеквизитов = ВидыРасчетаИнфо.Получить(НоваяСтрока.Начисление);
		ПериодыСтрокиРасчета = Новый Структура("ПериодДействия, ДатаНачала, ДатаОкончания");
		ЗаполнитьЗначенияСвойств(ПериодыСтрокиРасчета, НоваяСтрока);
		ЗаполнитьБазовыйПериодДанныеМенеджераРасчета(НоваяСтрока, ПериодыСтрокиРасчета, ЗначенияРеквизитов);
	КонецЦикла;

	// Скорректируем период датами приема на работу / увольнения сотрудников.
	Если ОписаниеДокумента.ПериодДействияВШапке Тогда
		МассивСотрудников = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаРасчета, "Сотрудник", Истина);
		КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, "ДатаПриема,ДатаЗавершенияРаботы");
		КадровыеДанныеСотрудников.Индексы.Добавить("Сотрудник");
		Для Каждого СтрокаТаблицы Из ТаблицаРасчета Цикл
			КадровыеДанныеСотрудника = КадровыеДанныеСотрудников.Найти(СтрокаТаблицы.Сотрудник, "Сотрудник");
			Если КадровыеДанныеСотрудника <> Неопределено Тогда
				Если СтрокаТаблицы.ДатаНачала < КадровыеДанныеСотрудника.ДатаПриема
					И НачалоМесяца(СтрокаТаблицы.ДатаНачала) = НачалоМесяца(КадровыеДанныеСотрудника.ДатаПриема) Тогда

					СтрокаТаблицы.ДатаНачала = КадровыеДанныеСотрудника.ДатаПриема;
				КонецЕсли;
				Если ЗначениеЗаполнено(КадровыеДанныеСотрудника.ДатаЗавершенияРаботы)
					И СтрокаТаблицы.ДатаОкончания > КадровыеДанныеСотрудника.ДатаЗавершенияРаботы
					И НачалоМесяца(СтрокаТаблицы.ДатаОкончания) = НачалоМесяца(КадровыеДанныеСотрудника.ДатаЗавершенияРаботы) Тогда

					СтрокаТаблицы.ДатаОкончания = Макс(КонецДня(СтрокаТаблицы.ДатаНачала), КадровыеДанныеСотрудника.ДатаЗавершенияРаботы);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если ОписаниеДокумента.УдержанияИмя = ИмяТаблицы
		Или ОписаниеДокумента.УдержанияПерерасчетИмя = ИмяТаблицы Тогда

		Если ЗаполнятьСведенияСотрудников Тогда
			МенеджерРасчета.ЗаполнитьСведенияУдержанийДляРасчета(ТаблицаРасчета);
		КонецЕсли;

		Если ЗаполнятьЗначенияПоказателей Тогда
			МенеджерРасчета.ЗаполнитьЗначенияПоказателейУдержаний(ТаблицаРасчета);
		КонецЕсли;

		ПараметрыДляПроверкиРезультатаРаспределения = ОтражениеЗарплатыВБухучетеРасширенный.ПараметрыДляПроверкиРезультатовРаспределенияУдержаний();
		ВидыРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаРасчета, "Удержание");
		ВидыРасчетаИнфо = ЗарплатаКадрыРасширенный.ИнформацияОВидахРасчета(ВидыРасчета);
		// Переносим значения в исходную коллекцию.
		Для Каждого КлючИЗначение Из СоответствиеСтрок Цикл
			СтрокаУдержанияВДанныеФормы(КлючИЗначение.Значение, КлючИЗначение.Ключ, ВидыРасчетаИнфо, ПараметрыДляПроверкиРезультатаРаспределения);
		КонецЦикла;
	Иначе
		Если ЗаполнятьСведенияСотрудников Тогда
			МенеджерРасчета.ЗаполнитьСведенияНачисленийДляРасчета(ТаблицаРасчета);
		КонецЕсли;

		Если ЗаполнятьЗначенияПоказателей Тогда
			Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.УправленческаяЗарплата") Тогда
				МодульУправленческаяЗарплатаФормы = ОбщегоНазначения.ОбщийМодуль("УправленческаяЗарплатаФормы");
				МодульУправленческаяЗарплатаФормы.ПередЗаполнениемЗначенийПоказателейНачислений(ОписаниеТаблицы, ТаблицаРасчета);
			КонецЕсли;
			#Вставка
			//1АБ Беляев 04.07.2021 + Доработка_4_НеТиповойРасчетНочныхПраздничных_Доработка_8_ВозможноВыбратьДоплатуЗаНочныеПраздничныеВРазовомНачислении
			Если ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.РазовоеНачисление") Тогда
				Если Форма.Объект["АБ_ИспользоватьНеТиповойРасчетНочных"] Тогда
					МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетНочных = Истина;
				Иначе
					МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетНочных = Ложь;
				КонецЕсли;
				
				Если Форма.Объект["АБ_ИспользоватьНеТиповойРасчетПраздничных"] Тогда
					МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетПраздничных = Истина;
				Иначе
					МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетПраздничных = Ложь;
				КонецЕсли;
			Иначе
				МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетНочных = Ложь;
				МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетПраздничных = Ложь;
			КонецЕсли;
			//1АБ Беляев 04.07.2021 - Доработка_4_НетиповойРасчетНочныхПраздничных_Доработка_8_ВозможноВыбратьДоплатуЗаНочныеПраздничныеВРазовомНачислении
			#КонецВставки
			МенеджерРасчета.ЗаполнитьЗначенияПоказателейНачислений(ТаблицаРасчета);
			#Вставка
			//1АБ Беляев 04.07.2021 + Доработка_4_НеТиповойРасчетНочныхПраздничных_Доработка_8_ВозможноВыбратьДоплатуЗаНочныеПраздничныеВРазовомНачислении
			Если ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.РазовоеНачисление") Тогда
				Если Форма.Объект.Начисление = ПолучитьВидРасчетаПоКоду("003  ") Или Форма.Объект.Начисление = ПолучитьВидРасчетаПоКоду("004  ") Тогда
					Для Каждого Строка1 Из ТаблицаРасчета Цикл
						Если Не Строка1.ФиксРасчет Тогда
						Строка1.АБ_Сторно = Истина;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			//1АБ Беляев 04.07.2021 - Доработка_4_НеТиповойРасчетНочныхПраздничных_Доработка_8_ВозможноВыбратьДоплатуЗаНочныеПраздничныеВРазовомНачислении
			#КонецВставки
			КонецЕсли;

		ВидыРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаРасчета, "Начисление");
		ВидыРасчетаИнфо = ЗарплатаКадрыРасширенный.ИнформацияОВидахРасчета(ВидыРасчета);
		// Переносим значения в исходную коллекцию.
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.УправленческаяЗарплата") 
			И ИмяТаблицы = "УправленческиеНачисления" Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("УправленческаяЗарплата");
			Для Каждого КлючИЗначение Из СоответствиеСтрок Цикл
				Модуль.СтрокаУправленческиеНачисленияВДанныеФормы(КлючИЗначение.Значение, КлючИЗначение.Ключ, ВидыРасчетаИнфо);
			КонецЦикла;
		Иначе	
			Для Каждого КлючИЗначение Из СоответствиеСтрок Цикл
				СтрокаНачисленияБезОплатыВДанныеФормы(КлючИЗначение.Значение, КлючИЗначение.Ключ, ВидыРасчетаИнфо);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьВидРасчетаПоКоду(Код)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Начисления.Ссылка КАК Ссылка
	               |ИЗ
	               |	ПланВидовРасчета.Начисления КАК Начисления
	               |ГДЕ
	               |	Начисления.Код = &Код";
	Запрос.УстановитьПараметр("Код",Код);
	Результат = Запрос.Выполнить();
	ВидРасчета = ПланыВидовРасчета.Начисления.ПустаяСсылка();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			ВидРасчета = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	Возврат ВидРасчета;
КонецФункции

//1АБ Беляев 04.07.2021 - Доработка 4 "Использовать нетиповой расчет ночных / праздничных" / Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
#КонецОбласти