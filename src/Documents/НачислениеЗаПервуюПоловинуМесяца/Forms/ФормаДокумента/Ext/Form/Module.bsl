#Область Доработка_НеПредоставлятьВычет
&НаСервере
&ИзменениеИКонтроль("РезультатЗаполненияВДлительнойОперации")
Функция АБ_РезультатЗаполненияВДлительнойОперации()
	
	СтруктураПараметров = РасчетЗарплатыРасширенныйКлиентСервер.ПараметрыПолученияДанныхЗаполненияДокумента();
	СтруктураПараметров.ОписаниеДокумента = ОписаниеДокумента();
	СтруктураПараметров.Организация = Объект.Организация;
	СтруктураПараметров.ДокументСсылка = Объект.Ссылка;
	СтруктураПараметров.Подразделение = Объект.Подразделение;
	СтруктураПараметров.МесяцНачисления = Объект.МесяцНачисления;
	СтруктураПараметров.ОкончаниеПериода = КонецДня(Объект.ОкончаниеПериодаНачисления);
	СтруктураПараметров.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.РасчетПервойПоловиныМесяца;
	СтруктураПараметров.ДатаВыплаты = Объект.ПланируемаяДатаВыплаты;
	СтруктураПараметров.ОкончательныйРасчетНДФЛ = ОкончательныйРасчетНДФЛ;
	СтруктураПараметров.ИспользоватьВоеннуюСлужбу = ИспользоватьВоеннуюСлужбу;
	СтруктураПараметров.НачислениеЗарплатыВоеннослужащим = Объект.НачислениеЗарплатыВоеннослужащим;
	
	НаименованиеЗадания = НСтр("ru = 'Заполнение документа ""Начисление зарплаты""'");	
	#Вставка
	//1АБ Самойленко +
	СтруктураПараметров.Вставить("НеПредоставлятьВычеты", Истина);
	//1АБ Самойленко -
	#КонецВставки
	
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"Документы.НачислениеЗаПервуюПоловинуМесяца.ПодготовитьДанныеДляЗаполнения",
		СтруктураПараметров,
		НаименованиеЗадания);
	
	АдресХранилища = Результат.АдресХранилища;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ЗаполнениеПослеВыполненияДлительнойОперации();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
&ИзменениеИКонтроль("РассчитатьСотрудникаНаСервере")
Процедура АБ_РассчитатьСотрудникаНаСервере(Сотрудник, ОписаниеТаблицы = Неопределено, РассчитатьИтоги = Истина)
	                                                          	
	Отбор = СотрудникиФизическиеЛицаОтбор(Сотрудник);
	Если Отбор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СотрудникиКРасчетуОтбор = Отбор.СотрудникиКРасчету;
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.МесяцНачисления, Объект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(Отбор.ФизическиеЛица, МенеджерРасчета);
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Истина;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьИсточникиИзмененийМенеджераРасчета(МенеджерРасчета, ИзмененныеДанные);
	
	ПозицииВставки = Новый Структура;
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета, Отбор, ПозицииВставки);
	МенеджерРасчета.РассчитатьЗарплату();
	ДанныеДляЗаполненияВДанныеФормы(МенеджерРасчета.Зарплата, ПозицииВставки);
	
	УчетНДФЛФормы.ЗаполнитьВторичныеДанныеТабличныхЧастей(ЭтаФорма, , СотрудникиКРасчетуОтбор);
	
	МассивОписанийТаблицФормы = МассивОписанийТаблицФормы();
	ЗарплатаКадрыРасширенный.ПериодНачисленияЗаполнитьИспользованиеПериода(ЭтаФорма, МассивОписанийТаблицФормы, СотрудникиКРасчетуОтбор);
	ЗарплатаКадрыРасширенный.ЗаполнитьДоступностьМестаПолученияДохода(ЭтаФорма, МассивОписанийТаблицФормы, СотрудникиКРасчетуОтбор);
	
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	ЗарплатаКадрыРасширенный.ВводНачисленийЗаполнитьВторичныеДанныеПоказателей(ЭтаФорма, МассивОписанийТаблицФормы, СотрудникиКРасчетуОтбор);
	Если РассчитатьИтоги Тогда
		РассчитатьИтогиПоДокументу();
	КонецЕсли; 
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьПредставлениеРаспределенияПоТерриториямУсловиямТруда(ЭтаФорма, Объект.Организация, ОписанияТаблицСРаспределениемПоТерриториямУсловиямТруда(), СотрудникиКРасчетуОтбор);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ПересчитатьНДФЛ")
Процедура АБ_ПересчитатьНДФЛ()
	
	УстановитьПривилегированныйРежим(Истина);
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.МесяцНачисления, Объект.Организация);
	Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(Объект.Начисления, "Сотрудник");
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(ФизическиеЛицаСотрудников, "Значение");
	ЗаполнитьНастройкиМенеджераРасчета(ФизическиеЛица, МенеджерРасчета);
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Истина;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки
	МенеджерРасчета.НастройкиРасчета.ФизическиеЛица = ФизическиеЛица;
	
	Если Не РассчитыватьНДФЛ() Тогда
		Объект.НДФЛ.Очистить();
		Объект.КорректировкиВыплаты.Очистить();
		Объект.ПримененныеВычетыНаДетейИИмущественные.Очистить();
	КонецЕсли;
	
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	МенеджерРасчета.ПересчитатьНДФЛ();
	ДанныеДляЗаполненияВДанныеФормы(МенеджерРасчета.Зарплата);
	УчетНДФЛФормы.ЗаполнитьВторичныеДанныеТабличныхЧастей(ЭтаФорма);
	РассчитатьИтогУдержано(ЭтаФорма);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ОбновитьБухучетРезультатовРасчетаНаСервере")
Процедура АБ_ОбновитьБухучетРезультатовРасчетаНаСервере(ИсходныеДанные)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.МесяцНачисления, Объект.Организация);
	
	Отбор = СотрудникиФизическиеЛицаОтбор(ИсходныеДанные.Сотрудник);
	СотрудникиКРасчету = Отбор.СотрудникиКРасчету;
	ПозицииВставки = Новый Структура;
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета, Отбор, ПозицииВставки);
	ЗаполнитьНастройкиМенеджераРасчета(Отбор.ФизическиеЛица, МенеджерРасчета);
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Истина;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки
	МенеджерРасчета.НастройкиБухучета.ПроверятьНеобходимостьПересчетаНДФЛ = МенеджерРасчета.НастройкиРасчета.РассчитыватьНДФЛ;
	
	МенеджерРасчета.ЗаполнитьНастройкиОбновленияБухучета(ИсходныеДанные);
	МенеджерРасчета.ОбновитьБухучетРезультатовРасчета();
	
	ДанныеДляЗаполненияВДанныеФормы(МенеджерРасчета.Зарплата, ПозицииВставки);
	
	УчетНДФЛФормы.ЗаполнитьВторичныеДанныеТабличныхЧастей(ЭтаФорма, , СотрудникиКРасчету);
	
	МассивОписанийТаблицФормы = МассивОписанийТаблицФормы();
	ЗарплатаКадрыРасширенный.ПериодНачисленияЗаполнитьИспользованиеПериода(ЭтаФорма, МассивОписанийТаблицФормы, СотрудникиКРасчету);
	ЗарплатаКадрыРасширенный.ЗаполнитьДоступностьМестаПолученияДохода(ЭтаФорма, МассивОписанийТаблицФормы, СотрудникиКРасчету);
	
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	ЗарплатаКадрыРасширенный.ВводНачисленийЗаполнитьВторичныеДанныеПоказателей(ЭтаФорма, МассивОписанийТаблицФормы, СотрудникиКРасчету);
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьПредставлениеРаспределенияПоТерриториямУсловиямТруда(ЭтаФорма, Объект.Организация, ОписанияТаблицСРаспределениемПоТерриториямУсловиямТруда(), СотрудникиКРасчету);
	
	РасчетЗарплатыРасширенныйФормы.УстановитьТекущуюСтрокуТаблицыФормы(ЭтаФорма, ИсходныеДанные.ИмяИсходнойТаблицы, ИсходныеДанные.НомерСтрокиИсходнойТаблицы);
	
КонецПроцедуры


#КонецОбласти