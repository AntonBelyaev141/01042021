#Область Доработка4_НеПредоставлятьВычеты_Доработка8_ВозможноВыбратьДоплатуЗаНочныеПраздничныеВРазовомНачислении
&НаСервере
Процедура АБ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//1АБ Беляев 05.04.2021 + Доработка "Использовать нетиповой расчет ночных/праздничных" + 04.07.2021 Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
	ЭлементПроверки=Элементы.Найти("ИспользоватьНеТиповойРасчетНочных");
	Если ТипЗнч(ЭлементПроверки) <> Тип("Неопределено") Тогда
	Иначе
		ЭлементыДополнительно=Элементы.Найти("ЭлементыДополнительно");
		ПолеЭтоДоначислениеНочныхПраздничных=Элементы.Вставить("ЭлементВидРасчетаНочныеПраздничные", Тип("ПолеФормы"), ЭлементыДополнительно);
		ПолеЭтоДоначислениеНочныхПраздничных.Вид = ВидПоляФормы.ПолеВвода;
		ПолеЭтоДоначислениеНочныхПраздничных.Заголовок = "Вид расчета 2 (ночные или праздничные)";
		ПолеЭтоДоначислениеНочныхПраздничных.ПутьКДанным = "Объект.АБ_ВидРасчетаНочныеПраздничные";
		ПолеЭтоДоначислениеНочныхПраздничных.УстановитьДействие("НачалоВыбора","АБ_УстановитьВидРасчетаНочныеПраздничные");
		ПолеЭтоДоначислениеНочныхПраздничных.УстановитьДействие("ПриИзменении","АБ_ПриИзмененииВидРасчетаНочныеПраздничные");

		ПолеИспользоватьНеТиповойРасчетНочных = Элементы.Вставить("ИспользоватьНеТиповойРасчетНочных", Тип("ПолеФормы"), ЭлементыДополнительно);
		ПолеИспользоватьНеТиповойРасчетНочных.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеИспользоватьНеТиповойРасчетНочных.Заголовок = "Использовать нетиповой расчет ночных";
		ПолеИспользоватьНеТиповойРасчетНочных.ПутьКДанным = "Объект.АБ_ИспользоватьНеТиповойРасчетНочных";


		ПолеИспользоватьНеТиповойРасчетПраздничных=Элементы.Вставить("ИспользоватьНеТиповойРасчетПраздничных", Тип("ПолеФормы"), ЭлементыДополнительно);
		ПолеИспользоватьНеТиповойРасчетПраздничных.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеИспользоватьНеТиповойРасчетПраздничных.Заголовок = "Использовать нетиповой расчет праздничных";
		ПолеИспользоватьНеТиповойРасчетПраздничных.ПутьКДанным = "Объект.АБ_ИспользоватьНеТиповойРасчетПраздничных";
		
		КомандаПересчитатьНДФЛ = Команды.Добавить("АБ_ПересчитатьНДФЛКнопка");
		КомандаПересчитатьНДФЛ.Действие = "АБ_ПересчитатьНДФЛКнопка";
		
		КнопкаРассчитатьНДФЛ = Элементы.Вставить("АБ_ЭлементыПересчитатьНДФЛ", Тип("КнопкаФормы"), ЭлементыДополнительно);
		КнопкаРассчитатьНДФЛ.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		КнопкаРассчитатьНДФЛ.Заголовок = "Пересчитать НДФЛ";
		КнопкаРассчитатьНДФЛ.ИмяКоманды = "АБ_ПересчитатьНДФЛКнопка";
		
		
		
		МассивДобавляемыхРеквизитов = Новый Массив;
		РеквизитСторно = Новый РеквизитФормы("АБ_Сторно",Новый ОписаниеТипов("Булево"),"Объект.Начисления","АБ_Сторно");
		МассивДобавляемыхРеквизитов.Добавить(РеквизитСторно);
		ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

		ТаблицаНачисления = Элементы.Найти("Начисления");
		ЭлементСторно = Элементы.Добавить("ЭлементСторно",Тип("ПолеФормы"),ТаблицаНачисления);
		ЭлементСторно.ПутьКДанным = "Объект.Начисления.АБ_Сторно";
		ЭлементСторно.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлементСторно.Заголовок = "АБ_Сторно";
	КонецЕсли;

	Если Параметры.Ключ.Пустая() Тогда
		Объект["АБ_ВидРасчетаНочныеПраздничные"] = ПланыВидовРасчета.Начисления.ПустаяСсылка();
		Объект["АБ_ИспользоватьНеТиповойРасчетНочных"]=Ложь;
		Объект["АБ_ИспользоватьНеТиповойРасчетПраздничных"]=Ложь;		
		ПолеИспользоватьНеТиповойРасчетНочных.Видимость = Ложь;
		ПолеИспользоватьНеТиповойРасчетПраздничных.Видимость = Ложь;
		КнопкаРассчитатьНДФЛ.Видимость = Ложь;
	Иначе
		Если ЗначениеЗаполнено(Объект.АБ_ВидРасчетаНочныеПраздничные) Тогда
			Элементы["ИспользоватьНеТиповойРасчетНочных"].Видимость = Истина;
			Элементы["ИспользоватьНеТиповойРасчетПраздничных"].Видимость = Истина;
			Элементы["АБ_ЭлементыПересчитатьНДФЛ"].Видимость = Истина;
		Иначе
			Элементы["ИспользоватьНеТиповойРасчетНочных"].Видимость = Ложь;
			Элементы["ИспользоватьНеТиповойРасчетПраздничных"].Видимость = Ложь;
			Элементы["АБ_ЭлементыПересчитатьНДФЛ"].Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	//1АБ Беляев 05.04.2021 - Доработка 8 "Использовать нетиповой расчет ночных/праздничных" + 04.07.2021 Доработка "Возможно выбрать доплату за ночные / праздничные в разовом начислении"



	ПроверочныйТип=Элементы.Найти("АБ_НеПредоставлятьВычеты");
	Если НЕ ТипЗнч(ПроверочныйТип) = Тип("Неопределено") Тогда
	Иначе
		ЭлементДополнительно=Элементы.Найти("ЭлементыДополнительно");
		Элемент_АБ_НеПредоставлятьВычеты=Элементы.Добавить("АБ_НеПредоставлятьВычеты",Тип("ПолеФормы"),ЭлементДополнительно);
		Элемент_АБ_НеПредоставлятьВычеты.Заголовок = "Не предоставлять вычеты";
		Элемент_АБ_НеПредоставлятьВычеты.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент_АБ_НеПредоставлятьВычеты.ПутьКДанным = "Объект.АБ_НеПредоставлятьВычеты";
		Элемент_АБ_НеПредоставлятьВычеты.УстановитьДействие("ПриИзменении","АБ_РассчитатьСотрудниковНаКлиенте1");
	КонецЕсли;


	Если Параметры.Ключ.Пустая() Тогда
		Объект.АБ_НеПредоставлятьВычеты = Истина;
	КонецЕсли;


КонецПроцедуры
//1АБ Беляев 04.07.2021 + Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
&НаКлиенте
Процедура АБ_УстановитьВидРасчетаНочныеПраздничные(Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	//отбор
	Параметры1 = Новый Структура;
	Массив1 = Новый Массив;
	Массив1.Добавить("003  ");
	Массив1.Добавить("004  ");
	Параметры1.Вставить("Отбор",Новый Структура("Код",Массив1));

	//описание оповещения
	ОписаниеОповещения1 = Новый ОписаниеОповещения("ОбработкаОповещения_ВыборВидаРасчета",ЭтотОбъект);

	//открытие формы
	ОткрытьФорму("ПланВидовРасчета.Начисления.Форма.АБ_ФормаВыбора",Параметры1,ЭтаФорма,,,,ОписаниеОповещения1,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);


КонецПроцедуры



&НаКлиенте
Процедура ОбработкаОповещения_ВыборВидаРасчета(Результат, Адрес) Экспорт
	//видимость и автозаполнение новых элементов
	Если ЗначениеЗаполнено(Результат) Тогда
		Элементы["ИспользоватьНеТиповойРасчетНочных"].Видимость = Истина;
		Элементы["ИспользоватьНеТиповойРасчетПраздничных"].Видимость = Истина;
		Элементы["АБ_ЭлементыПересчитатьНДФЛ"].Видимость = Истина;
		Объект.АБ_ИспользоватьНеТиповойРасчетНочных = Истина;
		Объект.АБ_ИспользоватьНеТиповойРасчетПраздничных = Истина;				
		Объект.АБ_ВидРасчетаНочныеПраздничные = Результат;
		Объект.Начисление = Результат;
		НачислениеПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АБ_ПриИзмененииВидРасчетаНочныеПраздничные(Элемент) Экспорт
	Если НЕ ЗначениеЗаполнено(Объект.АБ_ВидРасчетаНочныеПраздничные) Тогда
		Элементы["ИспользоватьНеТиповойРасчетНочных"].Видимость = Ложь;
		Элементы["ИспользоватьНеТиповойРасчетПраздничных"].Видимость = Ложь;
		Элементы["АБ_ЭлементыПересчитатьНДФЛ"].Видимость = Ложь;
		Объект.АБ_ИспользоватьНеТиповойРасчетНочных = Ложь;
		Объект.АБ_ИспользоватьНеТиповойРасчетПраздничных = Ложь;		
		Объект.АБ_ВидРасчетаНочныеПраздничные = ПредопределенноеЗначение("ПланВидовРасчета.Начисления.ПустаяСсылка");
		Объект.Начисление = ПредопределенноеЗначение("ПланВидовРасчета.Начисления.ПустаяСсылка");
		НачислениеПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

//1АБ Беляев 04.07.2021 - Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"

&НаКлиенте
Процедура АБ_РассчитатьСотрудниковНаКлиенте1(Команда)
	АБ_РассчитатьСотрудниковНаСервере1();
КонецПроцедуры

&НаСервере
Процедура АБ_РассчитатьСотрудниковНаСервере1()
	ПерезаполнитьДанныеФормыНаСервере(ОбщегоНазначения.ВыгрузитьКолонку(Объект.Начисления, "Сотрудник"), Ложь);
КонецПроцедуры


&НаСервере
&ИзменениеИКонтроль("РассчитатьВсеНаСервере")
Процедура АБ_РассчитатьВсеНаСервере(ОписаниеТаблицы = Неопределено)

	Если ОписаниеТаблицы = Неопределено Тогда
		ОписаниеТаблицы = ОписаниеТаблицыНачислений();
	КонецЕсли;

	Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(Объект.Начисления, "Сотрудник");
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(ФизическиеЛицаСотрудников, "Значение");
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.МесяцНачисления, Объект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(ФизическиеЛица, МенеджерРасчета);
	#Вставка
	//1АБ Беляев 14.03.2021 +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев 14.03.2021 -
	#КонецВставки
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьИсточникиИзмененийМенеджераРасчета(МенеджерРасчета, ИзмененныеДанные);

	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	МенеджерРасчета.РассчитатьЗарплату();
	#Вставка
	//1АБ Беляев 04.07.2021 + Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
	Если МенеджерРасчета.Зарплата.Начисления.Колонки.Найти("АБ_Сторно")<>Неопределено Тогда
		Для Каждого Строка Из МенеджерРасчета.Зарплата.Начисления Цикл
			Если (Строка.Начисление = ПолучитьВидРасчетаПоКоду("003  ") Или Строка.Начисление = ПолучитьВидРасчетаПоКоду("004  ")) И Строка.АБ_Сторно Тогда
				Если Строка.Результат>0 Тогда
				Строка.Результат = Строка.Результат * -1;
				КонецЕсли;
			    Если Строка.ОплаченоДней>0 Тогда
				Строка.ОплаченоДней = Строка.ОплаченоДней * -1;
				КонецЕсли;
			    Если Строка.ОплаченоЧасов>0 Тогда
				Строка.ОплаченоЧасов = Строка.ОплаченоЧасов * -1;
				КонецЕсли;

				ВремяВЧасах = ПолучитьПоказательПоИмени("ВремяВЧасах");
				ВремяВДняхЧасах = ПолучитьПоказательПоИмени("ВремяВДняхЧасах");
				Для Каждого Показатель1 Из Строка.Показатели Цикл
					Если Показатель1.Показатель = ВремяВЧасах Или Показатель1.Показатель = ВремяВДняхЧасах Тогда
						Если Показатель1.Значение>0 Тогда
						Показатель1.Значение = Показатель1.Значение * -1;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				Для Каждого СтрокаРаспределения1 Из Строка.РаспределениеПоСтатьям Цикл
					Если СтрокаРаспределения1.Результат>0 Тогда
					СтрокаРаспределения1.Результат = СтрокаРаспределения1.Результат * -1;
					КонецЕсли;
				КонецЦикла;				
			ИначеЕсли (Строка.Начисление = ПолучитьВидРасчетаПоКоду("003  ") Или Строка.Начисление = ПолучитьВидРасчетаПоКоду("004  ")) И НЕ Строка.АБ_Сторно Тогда
				ЗначениеВремяВЧасах = 0;
				ЗначениеВремяВДняхЧасах = 0;
				ЗначениеСтоимостьЧаса = 0;
				ЗначениеСтоимостьДняЧаса = 0;
				ЗначениеПроцентДоплатыЗаНочныеЧасы = 0;
				ЗначениеПроцентДоплатыЗаПраздничныеЧасы = 0;
				ВремяВЧасах = ПолучитьПоказательПоИмени("ВремяВЧасах");
				ВремяВДняхЧасах = ПолучитьПоказательПоИмени("ВремяВДняхЧасах");
				СтоимостьЧаса = ПолучитьПоказательПоИмени("СтоимостьЧаса");
				СтоимостьДняЧаса = ПолучитьПоказательПоИмени("СтоимостьДняЧаса");
				ПроцентДоплатыЗаНочныеЧасы = ПолучитьПоказательПоИмени("ПроцентДоплатыЗаРаботуВНочноеВремя");
				ПроцентДоплатыЗаПраздничныеЧасы = ПолучитьПоказательПоНаименованию("ПроцентДоплатыЗаРаботуВПраздники");
				Результат = 0;
			Если Строка.Начисление = ПолучитьВидРасчетаПоКоду("003  ") Тогда
				Для Каждого Показатель1 Из Строка.Показатели Цикл
					Если Показатель1.Показатель = ВремяВЧасах Тогда
						ЗначениеВремяВЧасах = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = СтоимостьЧаса Тогда
						ЗначениеСтоимостьЧаса = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = ПроцентДоплатыЗаНочныеЧасы Тогда
						ЗначениеПроцентДоплатыЗаНочныеЧасы = Показатель1.Значение;
					КонецЕсли;
				КонецЦикла;
				Результат = Окр(ЗначениеВремяВЧасах * ЗначениеСтоимостьЧаса * ЗначениеПроцентДоплатыЗаНочныеЧасы / 100,2);
			ИначеЕсли Строка.Начисление = ПолучитьВидРасчетаПоКоду("004  ") Тогда
				Для Каждого Показатель1 Из Строка.Показатели Цикл
					Если Показатель1.Показатель = ВремяВДняхЧасах Тогда
						ЗначениеВремяВДняхЧасах = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = СтоимостьДняЧаса Тогда
						ЗначениеСтоимостьДняЧаса = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = ПроцентДоплатыЗаПраздничныеЧасы Тогда
						ЗначениеПроцентДоплатыЗаПраздничныеЧасы = Показатель1.Значение;
					КонецЕсли;
				КонецЦикла;
				Результат = Окр(ЗначениеВремяВДняхЧасах * ЗначениеСтоимостьДняЧаса * ЗначениеПроцентДоплатыЗаПраздничныеЧасы / 100,2);
			КонецЕсли;
				  Строка.Результат = Результат;
				  Если Строка.РаспределениеПоСтатьям.Количество()>0 Тогда
				  Строка.РаспределениеПоСтатьям[0].Результат = Результат;
			  	КонецЕсли;			  	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//1АБ Беляев 04.07.2021 - Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
	#КонецВставки
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	
	ЗаполнитьНалогиУдержания();	

	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.Начисления, "ПериодДействия", "ПериодДействияСтрокой");
	ЗарплатаКадрыРасширенный.ПериодНачисленияЗаполнитьИспользованиеПериода(ЭтаФорма, ПериодНачисленияМассивОписанийТаблицФормы());
	МассивОписанийТаблицФормы = МассивОписанийТаблицФормы();
	ЗарплатаКадрыРасширенный.ЗаполнитьДоступностьМестаПолученияДохода(ЭтаФорма, МассивОписанийТаблицФормы);
	ЗарплатаКадрыРасширенный.ВводНачисленийЗаполнитьВторичныеДанныеПоказателей(ЭтаФорма, МассивОписанийТаблицФормы);
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьПредставлениеРаспределенияПоТерриториямУсловиямТруда(ЭтаФорма, Объект.Организация, ОписанияТаблицСРаспределениемПоТерриториямУсловиямТруда());

	УстановитьОтметкуНезаполненногоПланируемойДатыВыплаты(ЭтаФорма);
	УстановитьВидимостьПерерасчетов(ЭтаФорма);
	УстановитьВидимостьЗависимыхНачислений(ЭтаФорма);

КонецПроцедуры


&НаСервере
&ИзменениеИКонтроль("ЗаполнитьНастройкиМенеджераРасчета")
Процедура АБ_ЗаполнитьНастройкиМенеджераРасчета(ФизическиеЛица, МенеджерРасчета)

	МенеджерРасчета.ИсключаемыйРегистратор = Объект.Ссылка;
	МенеджерРасчета.ИсправленныйДокумент = Объект.ИсправленныйДокумент;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьНачисления = Истина;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьУдержания = Объект.РассчитыватьУдержания;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьНДФЛ = УчетНДФЛРасширенный.МежрасчетныйДокументИсчисляетНДФЛ(Объект.Организация, ОтложитьРасчетНалогаДоРасчетаЗарплатыВКонцеМесяца, Объект.ПорядокВыплаты, ОбязательныйРасчетНДФЛ, Объект.ПланируемаяДатаВыплаты);
	МенеджерРасчета.НастройкиРасчета.РассчитыватьКорректировкиВыплаты = Истина;
	МенеджерРасчета.НастройкиРасчета.СохранятьИсправления = Истина;

	МенеджерРасчета.НастройкиУдержаний.РассчитыватьТолькоПоТекущемуДокументу = Истина;

	МенеджерРасчета.НастройкиНДФЛ.Сотрудники = ФизическиеЛица;
	МенеджерРасчета.НастройкиНДФЛ.ДатаВыплаты = Объект.ПланируемаяДатаВыплаты;
	МенеджерРасчета.НастройкиНДФЛ.ОкончательныйРасчет = ОкончательныйРасчетНДФЛ;
	#Вставка
	//1АБ Беляев 04.07.2021 + Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
	МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетНочных = Объект.АБ_ИспользоватьНеТиповойРасчетНочных;
	МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетПраздничных = Объект.АБ_ИспользоватьНеТиповойРасчетПраздничных;
	//1АБ Беляев 04.07.2021 - Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
	#КонецВставки
	#Вставка
	//1АБ Беляев 14.03.2021 +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты=Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев 14.03.2021 -
	#КонецВставки

	МенеджерРасчета.НастройкиБухучета.НастройкиБухучетаДокумента = Документы.РазовоеНачисление.ДанныеДляБухучетаЗарплатыПервичныхДокументов(Объект)["ТаблицаБухучетЗарплаты"];

КонецПроцедуры

&НаКлиенте
Процедура АБ_ПересчитатьНДФЛКнопка(Команда)
	ПересчитатьНДФЛ();	    
КонецПроцедуры

&ИзменениеИКонтроль("ПересчитатьНДФЛ")
&НаСервере
Процедура АБ_ПересчитатьНДФЛ()
	
	УстановитьПривилегированныйРежим(Истина);
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.МесяцНачисления, Объект.Организация);
	Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(Объект.Начисления, "Сотрудник");
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(ФизическиеЛицаСотрудников, "Значение");
	ЗаполнитьНастройкиМенеджераРасчета(ФизическиеЛица, МенеджерРасчета);
	#Вставка
	//1АБ Беляев +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты=Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев -
	#КонецВставки
	МенеджерРасчета.НастройкиРасчета.ФизическиеЛица = ФизическиеЛица;
	
	Если ОтложитьРасчетНалогаДоРасчетаЗарплатыВКонцеМесяца Тогда
		Объект.НДФЛ.Очистить();
		Объект.КорректировкиВыплаты.Очистить();
		Объект.ПримененныеВычетыНаДетейИИмущественные.Очистить();
	КонецЕсли;		
	
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	МенеджерРасчета.ПересчитатьНДФЛ();
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	ЗаполнитьНалогиУдержания();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

//1АБ Беляев 04.07.2021 + Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
&НаСервере
&ИзменениеИКонтроль("РассчитатьСотрудниковНаСервере")
Процедура АБ_РассчитатьСотрудниковНаСервере(Знач Сотрудники, ОписаниеТаблицы, СохранятьИсправления = Истина, ВыводитьСообщения = Ложь)

	Если Не ЗначениеЗаполнено(Сотрудники) Тогда
		Возврат;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);

	Документ = РеквизитФормыВЗначение("Объект");
	Если Не Документ.ДокументГотовКРасчету(ВыводитьСообщения) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(Сотрудники) <> Тип("Массив") Тогда
		Сотрудники = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудники);
	КонецЕсли;

	НачатьТранзакцию();

	// Выполняем пересчет коллекций документа.
	Отбор = СотрудникиФизическиеЛицаОтбор(Сотрудники);

	Если ОписаниеТаблицы.ИмяТаблицы = "Начисления" Тогда
		Если ЗначениеЗаполнено(Объект.ИсправленныйДокумент) Тогда
			ОписанияТаблиц = Новый Массив;
			ОписанияТаблиц.Добавить(ОписаниеТаблицыНачислений());
			ОписанияТаблиц.Добавить(ОписаниеТаблицыЗависимыеНачисления());

			ТаблицыНачислений = Новый Структура;
			ТаблицыНачислений.Вставить("Начисления", Объект.Начисления);
			ТаблицыНачислений.Вставить("ЗависимыеНачисления", Объект.ЗависимыеНачисления);

			ИсправлениеДокументовРасчетЗарплаты.СформироватьДанныеПерерасчетаДляИсправления(Объект.Организация, Объект.МесяцНачисления, Объект.ИсправленныйДокумент, ТаблицыНачислений, Объект.НачисленияПерерасчет, Объект.Ссылка, ОписанияТаблиц, ПолучитьКонтролируемыеПоля(), ОписаниеДокумента(ЭтотОбъект),, Объект.ДоначислитьЗарплатуПриНеобходимости);
		Иначе
			ОтборПоСотрудникам = Новый Структура("Сотрудник", Отбор.СотрудникиКРасчету);
			ИсправлениеДокументовРасчетЗарплаты.СформироватьДанныеПерерасчета(Объект.Организация, Объект.МесяцНачисления, Объект.Начисления, Объект.НачисленияПерерасчет, Объект.Ссылка, ПолучитьКонтролируемыеПоля(), ОписаниеДокумента(ЭтотОбъект), ОтборПоСотрудникам, Объект);
		КонецЕсли;
	КонецЕсли;

	Если Не СохранятьИсправления Тогда
		ОписаниеТаблицРазовыхНачислений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОписаниеТаблицыНачислений());
		ДокументыРазовыхНачисленийФормы.ОбновитьЗависимыеНачислениями(Объект, Сотрудники, ОписаниеДокумента(ЭтотОбъект), ОписаниеТаблицРазовыхНачислений);
	КонецЕсли;

	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.МесяцНачисления, Объект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(Отбор.ФизическиеЛица, МенеджерРасчета);

	ПозицииВставки = Новый Структура;
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета, Отбор, ПозицииВставки);
	ЗаполнитьСтрокиУдержаний(Отбор.СотрудникиКРасчету, МенеджерРасчета, СохранятьИсправления);
	МенеджерРасчета.РассчитатьЗарплату();
	#Вставка
	//1АБ Беляев 04.07.2021 + Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
	Если МенеджерРасчета.Зарплата.Начисления.Колонки.Найти("АБ_Сторно")<>Неопределено Тогда
		Для Каждого Строка Из МенеджерРасчета.Зарплата.Начисления Цикл
			Если (Строка.Начисление = ПолучитьВидРасчетаПоКоду("003  ") Или Строка.Начисление = ПолучитьВидРасчетаПоКоду("004  ")) И Строка.АБ_Сторно Тогда
				Если Строка.Результат>0 Тогда
				Строка.Результат = Строка.Результат * -1;
				КонецЕсли;
			    Если Строка.ОплаченоДней>0 Тогда
				Строка.ОплаченоДней = Строка.ОплаченоДней * -1;
				КонецЕсли;
			    Если Строка.ОплаченоЧасов>0 Тогда
				Строка.ОплаченоЧасов = Строка.ОплаченоЧасов * -1;
				КонецЕсли;

				ВремяВЧасах = ПолучитьПоказательПоИмени("ВремяВЧасах");
				ВремяВДняхЧасах = ПолучитьПоказательПоИмени("ВремяВДняхЧасах");
				Для Каждого Показатель1 Из Строка.Показатели Цикл
					Если Показатель1.Показатель = ВремяВЧасах Или Показатель1.Показатель = ВремяВДняхЧасах Тогда
						Если Показатель1.Значение>0 Тогда
						Показатель1.Значение = Показатель1.Значение * -1;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				Для Каждого СтрокаРаспределения1 Из Строка.РаспределениеПоСтатьям Цикл
					Если СтрокаРаспределения1.Результат>0 Тогда
					СтрокаРаспределения1.Результат = СтрокаРаспределения1.Результат * -1;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли (Строка.Начисление = ПолучитьВидРасчетаПоКоду("003  ") Или Строка.Начисление = ПолучитьВидРасчетаПоКоду("004  ")) И НЕ Строка.АБ_Сторно Тогда
				ЗначениеВремяВЧасах = 0;
				ЗначениеВремяВДняхЧасах = 0;
				ЗначениеСтоимостьЧаса = 0;
				ЗначениеСтоимостьДняЧаса = 0;
				ЗначениеПроцентДоплатыЗаНочныеЧасы = 0;
				ЗначениеПроцентДоплатыЗаПраздничныеЧасы = 0;
				ВремяВЧасах = ПолучитьПоказательПоИмени("ВремяВЧасах");
				ВремяВДняхЧасах = ПолучитьПоказательПоИмени("ВремяВДняхЧасах");
				СтоимостьЧаса = ПолучитьПоказательПоИмени("СтоимостьЧаса");
				СтоимостьДняЧаса = ПолучитьПоказательПоИмени("СтоимостьДняЧаса");
				ПроцентДоплатыЗаНочныеЧасы = ПолучитьПоказательПоИмени("ПроцентДоплатыЗаРаботуВНочноеВремя");
				ПроцентДоплатыЗаПраздничныеЧасы = ПолучитьПоказательПоНаименованию("ПроцентДоплатыЗаРаботуВПраздники");
				Результат = 0;
			Если Строка.Начисление = ПолучитьВидРасчетаПоКоду("003  ") Тогда
				Для Каждого Показатель1 Из Строка.Показатели Цикл
					Если Показатель1.Показатель = ВремяВЧасах Тогда
						ЗначениеВремяВЧасах = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = СтоимостьЧаса Тогда
						ЗначениеСтоимостьЧаса = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = ПроцентДоплатыЗаНочныеЧасы Тогда
						ЗначениеПроцентДоплатыЗаНочныеЧасы = Показатель1.Значение;
					КонецЕсли;
				КонецЦикла;
				Результат = Окр(ЗначениеВремяВЧасах * ЗначениеСтоимостьЧаса * ЗначениеПроцентДоплатыЗаНочныеЧасы / 100,2);
			ИначеЕсли Строка.Начисление = ПолучитьВидРасчетаПоКоду("004  ") Тогда
				Для Каждого Показатель1 Из Строка.Показатели Цикл
					Если Показатель1.Показатель = ВремяВДняхЧасах Тогда
						ЗначениеВремяВДняхЧасах = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = СтоимостьДняЧаса Тогда
						ЗначениеСтоимостьДняЧаса = Показатель1.Значение;
					ИначеЕсли Показатель1.Показатель = ПроцентДоплатыЗаПраздничныеЧасы Тогда
						ЗначениеПроцентДоплатыЗаПраздничныеЧасы = Показатель1.Значение;
					КонецЕсли;
				КонецЦикла;
				Результат = Окр(ЗначениеВремяВДняхЧасах * ЗначениеСтоимостьДняЧаса * ЗначениеПроцентДоплатыЗаПраздничныеЧасы / 100,2);
			КонецЕсли;
				  Строка.Результат = Результат;
				  Если Строка.РаспределениеПоСтатьям.Количество()>0 Тогда
				  Строка.РаспределениеПоСтатьям[0].Результат = Результат;
				  КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//1АБ Беляев 04.07.2021 - Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"
	#КонецВставки
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата, ПозицииВставки);

	ОтменитьТранзакцию();
	
    УстановитьПривилегированныйРежим(Ложь);

	ОбновитьНачисленоУдержаноИтог(Отбор.СотрудникиКРасчету);

	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.Начисления, "ПериодДействия", "ПериодДействияСтрокой");
	ЗарплатаКадрыРасширенный.ПериодНачисленияЗаполнитьИспользованиеПериода(ЭтаФорма, ПериодНачисленияМассивОписанийТаблицФормы());
	МассивОписанийТаблицФормы = МассивОписанийТаблицФормы();
	ЗарплатаКадрыРасширенный.ЗаполнитьДоступностьМестаПолученияДохода(ЭтаФорма, МассивОписанийТаблицФормы);
	ЗарплатаКадрыРасширенный.ВводНачисленийЗаполнитьВторичныеДанныеПоказателей(ЭтаФорма, МассивОписанийТаблицФормы);
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьПредставлениеРаспределенияПоТерриториямУсловиямТруда(ЭтаФорма, Объект.Организация, ОписанияТаблицСРаспределениемПоТерриториямУсловиямТруда());

	УстановитьОтметкуНезаполненногоПланируемойДатыВыплаты(ЭтаФорма);
	УстановитьВидимостьПерерасчетов(ЭтаФорма);
	УстановитьВидимостьЗависимыхНачислений(ЭтаФорма);

	Если ЗаполнениеВыполнено = Неопределено Тогда
		ЗаполненныеСотрудники = Новый Соответствие;
	Иначе
		ЗаполненныеСотрудники = Новый Соответствие(ЗаполнениеВыполнено);
	КонецЕсли;

	Для каждого ЗаполненныйСотрудник Из Сотрудники Цикл
		ЗаполненныеСотрудники.Вставить(ЗаполненныйСотрудник, Истина);
	КонецЦикла;

	ЗаполнениеВыполнено = Новый ФиксированноеСоответствие(ЗаполненныеСотрудники);

КонецПроцедуры
&НаСервере
Функция ПолучитьВидРасчетаПоКоду(Код)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Начисления.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Код = &Код";
	Запрос.УстановитьПараметр("Код",Код);
	Результат = Запрос.Выполнить();
	ВидРасчета = ПланыВидовРасчета.Начисления.ПустаяСсылка();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			ВидРасчета = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	Возврат ВидРасчета;
КонецФункции

&НаСервере
Функция ПолучитьПоказательПоИмени(ИмяПредопределенногоЭлемента)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоказателиРасчетаЗарплаты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПоказателиРасчетаЗарплаты КАК ПоказателиРасчетаЗарплаты
	|ГДЕ
	|	ПоказателиРасчетаЗарплаты.ИмяПредопределенныхДанных = &ИмяПредопределенныхДанных";
	Запрос.УстановитьПараметр("ИмяПредопределенныхДанных",ИмяПредопределенногоЭлемента);
	Результат = Запрос.Выполнить();
	Показатель = Справочники.ПоказателиРасчетаЗарплаты.ПустаяСсылка();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			Показатель = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;

	Возврат Показатель;

КонецФункции

&НаСервере
Функция ПолучитьПоказательПоНаименованию(Имя)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоказателиРасчетаЗарплаты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПоказателиРасчетаЗарплаты КАК ПоказателиРасчетаЗарплаты
	|ГДЕ
	|	ПоказателиРасчетаЗарплаты.Наименование = &Имя";
	Запрос.УстановитьПараметр("Имя",Имя);
	Результат = Запрос.Выполнить();
	Показатель = Справочники.ПоказателиРасчетаЗарплаты.ПустаяСсылка();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			Показатель = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;

	Возврат Показатель;

КонецФункции
        
//1АБ Беляев 04.07.2021 - Доработка 8 "Возможно выбрать доплату за ночные / праздничные в разовом начислении"


#КонецОбласти
