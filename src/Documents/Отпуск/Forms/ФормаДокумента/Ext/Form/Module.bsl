#Область Доработка_4_НеПредоставлятьВычеты_Доработка_1_ИспользоватьНеТиповойРасчетНочныхПраздничных_Доработка_5_УправлениеУдержаниями
&НаСервере
Процедура АБ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
		
	//1АБ Беляев 16.03.2021 + Доработка "Не предоставлять вычеты в межрасчет"
	ПроверочныйТип=Элементы.Найти("АБ_НеПредоставлятьВычеты");
	Если НЕ ТипЗнч(ПроверочныйТип) = Тип("Неопределено") Тогда
	Иначе
		ЭлементДополнительно=Элементы.Найти("ЭлементыДополнительно");
		Элемент_АБ_НеПредоставлятьВычеты=Элементы.Добавить("АБ_НеПредоставлятьВычеты",Тип("ПолеФормы"),ЭлементДополнительно);
		Элемент_АБ_НеПредоставлятьВычеты.Заголовок = "Не предоставлять вычеты";
		Элемент_АБ_НеПредоставлятьВычеты.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент_АБ_НеПредоставлятьВычеты.ПутьКДанным = "Объект.АБ_НеПредоставлятьВычеты";
		Элемент_АБ_НеПредоставлятьВычеты.УстановитьДействие("ПриИзменении","АБ_РассчитатьСотрудниковНаКлиенте");		
	КонецЕсли;
	//1АБ Беляев 16.03.2021 - Доработка "Не предоставлять вычеты в межрасчет"
	
	//1АБ Беляев 05.04.2021 + Доработка "Использовать нетиповой расчет ночных/праздничных" 
	ЭлементПроверки=Элементы.Найти("ИспользоватьНеТиповойРасчетНочных");
	Если ТипЗнч(ЭлементПроверки) <> Тип("Неопределено") Тогда
	Иначе
	ЭлементыДополнительно=Элементы.Найти("ЭлементыДополнительно");
	ПолеИспользоватьНеТиповойРасчетНочных = Элементы.Вставить("ИспользоватьНеТиповойРасчетНочных", Тип("ПолеФормы"), ЭлементыДополнительно);
	ПолеИспользоватьНеТиповойРасчетНочных.Вид = ВидПоляФормы.ПолеФлажка;
	ПолеИспользоватьНеТиповойРасчетНочных.Заголовок = "Использовать нетиповой расчет ночных";
	ПолеИспользоватьНеТиповойРасчетНочных.ПутьКДанным = "Объект.АБ_ИспользоватьНеТиповойРасчетНочных";
	
	ПолеИспользоватьНеТиповойРасчетПраздничных=Элементы.Вставить("ИспользоватьНеТиповойРасчетПраздничных", Тип("ПолеФормы"), ЭлементыДополнительно);
	ПолеИспользоватьНеТиповойРасчетПраздничных.Вид = ВидПоляФормы.ПолеФлажка;
	ПолеИспользоватьНеТиповойРасчетПраздничных.Заголовок = "Использовать нетиповой расчет праздничных";
	ПолеИспользоватьНеТиповойРасчетПраздничных.ПутьКДанным = "Объект.АБ_ИспользоватьНеТиповойРасчетПраздничных";
	КонецЕсли;

	Если Параметры.Ключ.Пустая() Тогда
	Объект["АБ_ИспользоватьНеТиповойРасчетНочных"]=Истина;
	Объект["АБ_ИспользоватьНеТиповойРасчетПраздничных"]=Истина;
	Объект["АБ_НеПредоставлятьВычеты"]=Истина;
	КонецЕсли;
	//1АБ Беляев 05.04.2021 - Доработка "Использовать нетиповой расчет ночных/праздничных" 
	//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСвойствоРассчитыватьУдержания(ЭтотОбъект);
	КонецЕсли;
	ЭлементПроверки=Элементы.Найти("РассчитыватьУдержания");
	Если ТипЗнч(ЭлементПроверки) <> Тип("Неопределено") Тогда
	Иначе
		РасчетЗарплатыРасширенныйФормы.РассчитатьУдержанияДополнитьФорму(ЭтотОбъект);
		УстановитьДоступностьПоляРассчитыватьУдержания(ЭтотОбъект);
	КонецЕсли;
	//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"

КонецПроцедуры

//1АБ Беляев 16.03.2021 +  Доработк "Не предоставлять вычеты в межрасчет" + "Использовать нетиповой расчет ночных/праздничных"
&НаКлиенте
Процедура АБ_РассчитатьСотрудниковНаКлиенте(Команда)
	АБ_РассчитатьСотрудниковНаСервере();
КонецПроцедуры

&НаСервере
Процедура АБ_РассчитатьСотрудниковНаСервере()
	ПерезаполнитьНачисленияСотрудника(, , Ложь);
КонецПроцедуры

//1АБ Беляев 16.03.2021 -  Доработк "Не предоставлять вычеты в межрасчет" + "Использовать нетиповой расчет ночных/праздничных"

//1АБ Беляев 12.04.2021 + Доработка 5 "Добавить управление расчетом удержаний"
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойствоРассчитыватьУдержания(Форма)
	
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьСвойствоРассчитыватьУдержания(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПоляРассчитыватьУдержания(Форма)
	
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьДоступностьПоляРассчитыватьУдержания(Форма);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("УдержанияДоступны")
Функция АБ_УдержанияДоступны()

	Если Не ИспользуетсяРасчетЗарплаты Тогда
		Возврат Ложь;
	Иначе
		#Удаление
		Возврат ЭтоМежрасчетнаяВыплата(Объект.ПорядокВыплаты);
		#КонецУдаления
		#Вставка
		//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
		Возврат Объект.РассчитыватьУдержания;
		//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"
		#КонецВставки
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура Подключаемый_РассчитыватьУдержанияПриИзменении(Элемент)
	
	//полностью дублируем текст процедуры "Подключаемый_ПорядокВыплатыПриИзменении",
	//но не можем прямо на нее сослаться из-за зацикливания,
	//так как возвращаемся сюда
	ПерезаполнитьНачисления = Неопределено;
	ПорядокВыплатыПриИзмененииНаСервере(ПерезаполнитьНачисления);
	
	Если ПерезаполнитьНачисления = Истина Тогда
		ВыполнитьРасчетИПерезаполнениеНачислений();
	ИначеЕсли ПерезаполнитьНачисления = Ложь Тогда
		ВыполнитьРасчетИПерезаполнениеНачислений(Ложь);
	КонецЕсли;

	
КонецПроцедуры


&НаКлиенте
&Перед("Подключаемый_ПорядокВыплатыПриИзменении")
Процедура АБ_Подключаемый_ПорядокВыплатыПриИзменении(Элемент)
	УстановитьСвойствоРассчитыватьУдержания(ЭтотОбъект);
	УстановитьДоступностьПоляРассчитыватьУдержания(ЭтотОбъект);
	УстановитьВидимостьУдержаний();
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("РассчитатьДанныеФормы")
Процедура АБ_РассчитатьДанныеФормы(Сотрудники, ОписаниеТаблицы = Неопределено)
	
	ПериодРасчетаЗарплаты = ПериодРасчетаЗарплатыДоНачалаОтпуска();
	
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.ПериодРегистрации, Объект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты);
	#Вставка
	//1АБ Беляев +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев -
	#КонецВставки
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьИсточникиИзмененийМенеджераРасчета(МенеджерРасчета, ИзмененныеДанные);
	
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	МенеджерРасчета.РассчитатьЗарплату();
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ОбновитьБухучетРезультатовРасчетаНаСервере")
Процедура АБ_ОбновитьБухучетРезультатовРасчетаНаСервере(ИсходныеДанные = Неопределено)
	
	ПериодРасчетаЗарплаты = ПериодРасчетаЗарплатыДоНачалаОтпуска();
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.ПериодРегистрации, Объект.Организация);
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты);
	#Вставка
	//1АБ Беляев +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев -
	#КонецВставки
	МенеджерРасчета.НастройкиБухучета.ПроверятьНеобходимостьПересчетаНДФЛ = МенеджерРасчета.НастройкиРасчета.РассчитыватьНДФЛ;
	МенеджерРасчета.ЗаполнитьНастройкиОбновленияБухучета(ИсходныеДанные);
	МенеджерРасчета.ОбновитьБухучетРезультатовРасчета();
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	
	Если ИсходныеДанные <> Неопределено Тогда
		РасчетЗарплатыРасширенныйФормы.УстановитьТекущуюСтрокуТаблицыФормы(ЭтаФорма, ИсходныеДанные.ИмяИсходнойТаблицы, ИсходныеДанные.НомерСтрокиИсходнойТаблицы);
	КонецЕсли;
	
КонецПроцедуры




//1АБ Беляев 12.04.2021 - Доработка 5 "Добавить управление расчетом удержаний"

#КонецОбласти

