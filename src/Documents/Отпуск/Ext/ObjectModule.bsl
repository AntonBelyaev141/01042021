&ИзменениеИКонтроль("Рассчитать")
Процедура АБ_Рассчитать(ПараметрыРасчета = Неопределено) Экспорт
	
	Если ПараметрыРасчета = Неопределено Тогда
		ПараметрыРасчета = ПараметрыРасчета();
	КонецЕсли;
	
	ОписаниеДокумента = Документы.Отпуск.ОписаниеДокументаРасчета();
	Если ЗначениеЗаполнено(ЭтотОбъект.ИсправленныйДокумент) Тогда
		ПараметрыИсправленногоДокумента = Документы.Отпуск.ПараметрыИсправляемогоДокумента(ЭтотОбъект.ИсправленныйДокумент);
	Иначе
		ПараметрыИсправленногоДокумента = Неопределено;
	КонецЕсли;
	
	Документы.Отпуск.ОчиститьРассчитанныеДанные(ЭтотОбъект, ПараметрыРасчета.ПерезаполнитьНачисления, ПараметрыРасчета.ОбновитьРасчетДенежногоСодержания);
	
	НачалоПериода = ?(ПараметрыРасчета.ПерезаполнитьНачисления, Документы.Отпуск.НачальныйПериодРасчетаЗарплаты(ЭтотОбъект).ДатаНачала, Неопределено);
	ПериодРасчетаЗарплаты = Документы.Отпуск.ПериодРасчетаЗарплатыДоНачалаОтпуска(ЭтотОбъект, НачалоПериода);
	
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(ЭтотОбъект.ПериодРегистрации, ЭтотОбъект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты, ПараметрыРасчета.СохранятьИсправления);
	#Вставка
	//1АБ Беляев +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = АБ_НеПредоставлятьВычеты;
	//1АБ Беляев -
	#КонецВставки
	
	ЗафиксированныеСтрокиОплатыТруда = Новый Соответствие;
	
	Если ПараметрыРасчета.ПерезаполнитьНачисления Тогда
		
		Если (ЭтотОбъект.РассчитатьЗарплату Или ЭтотОбъект.ПредоставитьЕдиновременнуюВыплатуКОтпуску
			Или (ЭтотОбъект.ПредоставитьМатериальнуюПомощьПриОтпуске И ЭтотОбъект.РасчетДенежногоСодержания))
			И Документы.Отпуск.ОтпускНачинаетсяВСледующемМесяце(ЭтотОбъект, НачалоПериода) Тогда
			
			ЗаполнитьНачисления(МенеджерРасчета, ПериодРасчетаЗарплаты, ПараметрыИсправленногоДокумента, ПараметрыРасчета.ОбновитьДанныеДляРасчетаСреднего);
			ЗаполнитьПерерасчеты(МенеджерРасчета);
			
			Если Не ПараметрыРасчета.СкорректированСреднийЗаработок Тогда 
				ПараметрыРасчета.ОбновитьДанныеДляРасчетаСреднего = Истина;
			КонецЕсли;
			
			ЗафиксированныеСтрокиОплатыОтпуска = УстановитьПризнакФиксРасчетНачислениямОплатыОтпуска(МенеджерРасчета);
			
			НастройкиРасчетаОтпуска = ОбщегоНазначения.СкопироватьРекурсивно(МенеджерРасчета.НастройкиРасчета);
			МенеджерРасчета.УстановитьНастройкиРасчетаПоУмолчанию();
			#Вставка
			//1АБ Беляев 16.03.2021 +
			МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = АБ_НеПредоставлятьВычеты;
			//1АБ Беляев 16.03.2021 -
			#КонецВставки
			#Вставка
			//1АБ Беляев 05.04.2021 +
			МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетНочных = АБ_ИспользоватьНеТиповойРасчетНочных;
			МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетПраздничных = АБ_ИспользоватьНеТиповойРасчетПраздничных;
			//1АБ Беляев 05.04.2021 -
			#КонецВставки
			МенеджерРасчета.НастройкиРасчета.Сотрудники = НастройкиРасчетаОтпуска.Сотрудники;
			МенеджерРасчета.НастройкиРасчета.ФизическиеЛица = НастройкиРасчетаОтпуска.ФизическиеЛица;
			МенеджерРасчета.НастройкиРасчета.РассчитыватьНачисления = Истина;			
			
			МенеджерРасчета.РассчитатьЗарплату();
			
			ЗаполнитьНастройкиМенеджераРасчетаПоШаблону(МенеджерРасчета, НастройкиРасчетаОтпуска);
			#Вставка
			//1АБ Беляев +
			МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = АБ_НеПредоставлятьВычеты;
			//1АБ Беляев -
			#КонецВставки
			РезультатРасчетаНачисленийВДанныеОбъекта(МенеджерРасчета.Зарплата);
			
			НоваяТранзакция = НачатьНовуюТранзакцию();
			ЗарегистрироватьНачисленияОплатыТруда(МенеджерРасчета.Зарплата);
			ОбновитьДанныеДляРасчетаСохраняемогоЗаработка(ПараметрыРасчета);
			
			Если НоваяТранзакция Тогда
				ОтменитьТранзакцию();
			КонецЕсли;	
			
			Документы.Отпуск.ОчиститьРассчитанныеДанные(ЭтотОбъект, ПараметрыРасчета.ПерезаполнитьНачисления, ложь);
			ОчиститьДанныеДляРасчетаСреднегоЗаПериодРегистрации(ПараметрыРасчета.ОбновитьДанныеДляРасчетаСреднего);
			СброситьПризнакФиксРасчет(МенеджерРасчета, ЗафиксированныеСтрокиОплатыОтпуска);
			
			ЗафиксированныеСтрокиОплатыТруда = УстановитьПризнакФиксРасчетНачислениямОплатыТруда(МенеджерРасчета);
		Иначе
			ОбновитьДанныеДляРасчетаСохраняемогоЗаработка(ПараметрыРасчета);
		КонецЕсли;
		МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(ЭтотОбъект.ПериодРегистрации, ЭтотОбъект.Организация);
		ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты, ПараметрыРасчета.СохранятьИсправления);
		#Вставка
		//1АБ Беляев +
		МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = АБ_НеПредоставлятьВычеты;
		//1АБ Беляев -
		#КонецВставки
		ЗаполнитьНачисления(МенеджерРасчета, ПериодРасчетаЗарплаты, ПараметрыИсправленногоДокумента, ПараметрыРасчета.ОбновитьДанныеДляРасчетаСреднего);
		ЗаполнитьПерерасчеты(МенеджерРасчета);
		
		МенеджерРасчета.НастройкиБухучета.КоэффициентыСреднегоЗаработкаДокумента 
			= УчетСреднегоЗаработка.КоэффициентыРаспределенияСреднегоЗаработкаДокумента(ЭтотОбъект, ОписаниеДокумента, ЭтоСреднеЧасовойЗаработок());
		МенеджерРасчета.НастройкиБухучета.КоэффициентыРаспределенияДенежногоСодержания = ЭтотОбъект.КоэффициентыРаспределенияДенежногоСодержания.Выгрузить();
		
	Иначе
		ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	КонецЕсли;	
	
	ЗаполнитьУдержания(МенеджерРасчета);
	
	МенеджерРасчета.РассчитатьЗарплату();
	
	СброситьПризнакФиксРасчет(МенеджерРасчета, ЗафиксированныеСтрокиОплатыТруда); 
	
	РасчетЗарплатыВДанныeОбъекта(МенеджерРасчета.Зарплата);
КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьНастройкиМенеджераРасчета")
Процедура АБ_ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты, СохранятьИсправления = Истина)
	ОписаниеДокумента = Документы.Отпуск.ОписаниеДокументаРасчета();
	ПараметрыИсправляемого = Документы.Отпуск.ПараметрыИсправляемогоДокумента(ЭтотОбъект.ИсправленныйДокумент);
	
	МенеджерРасчета.ИсключаемыйРегистратор = ЭтотОбъект.Ссылка;
	
	ИсправлениеРасчетовБЗК.НастроитьМенеджерРасчета(МенеджерРасчета, ЭтотОбъект, ОписаниеДокумента, ПараметрыИсправляемого);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.УправленческаяЗарплата") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УправленческаяЗарплата");
		Модуль.ПриИнициализацииМенеджераРасчетаДляЗаполненияДокументаРасчетаЗарплаты(МенеджерРасчета);
	КонецЕсли;
	
	МенеджерРасчета.НастройкиРасчета.РассчитыватьНачисления = Истина;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьНДФЛ = Истина;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьКорректировкиВыплаты = Истина;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьЗаймы = ПериодРасчетаЗарплаты <> Неопределено;
	#Удаление
	МенеджерРасчета.НастройкиРасчета.РассчитыватьУдержания = РасчетЗарплатыРасширенный.ЭтоМежрасчетнаяВыплата(ЭтотОбъект.ПорядокВыплаты);
	#КонецУдаления
	#Вставка
	//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
	МенеджерРасчета.НастройкиРасчета.РассчитыватьУдержания = РассчитыватьУдержания;
	//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"
	#КонецВставки
	МенеджерРасчета.НастройкиРасчета.СохранятьИсправления = СохранятьИсправления;
	МенеджерРасчета.НастройкиРасчета.РасчетЗарплаты = ПериодРасчетаЗарплаты <> Неопределено;
	
	МенеджерРасчета.НастройкиНДФЛ.Сотрудники = ЭтотОбъект.Сотрудник;
	МенеджерРасчета.НастройкиНДФЛ.ДатаВыплаты = ЭтотОбъект.ПланируемаяДатаВыплаты;
	МенеджерРасчета.НастройкиНДФЛ.ОкончательныйРасчет = Ложь;
	МенеджерРасчета.НастройкиНДФЛ.ДоходПолученНаТерриторииРФ = ЭтотОбъект.ДоходПолученНаТерриторииРФ;
	
	ЗасчитыватьДанныеАвансов = ЭтотОбъект.РассчитатьЗарплату;	
	Если ЗасчитыватьДанныеАвансов
		И ИсправлениеРасчетовБЗККлиентСервер.ИсправлениеВТекущемПериоде(ЭтотОбъект, ПараметрыИсправляемого)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.ИсправленныйДокумент, "РассчитатьЗарплату") Тогда
			 ЗасчитыватьДанныеАвансов = Ложь
	КонецЕсли;
	МенеджерРасчета.НастройкиНДФЛ.ЗасчитыватьДанныеАвансов = ЗасчитыватьДанныеАвансов;
	
	МенеджерРасчета.НастройкиУдержаний.РассчитыватьТолькоПоТекущемуДокументу = Истина;
	Если ПериодРасчетаЗарплаты <> Неопределено Тогда
		МенеджерРасчета.НастройкиЗаймов.Сотрудники = ЭтотОбъект.Сотрудник;
		МенеджерРасчета.НастройкиЗаймов.ДатаПогашения = ПериодРасчетаЗарплаты.ДатаОкончания;
	КонецЕсли;
	МенеджерРасчета.НастройкиБухучета.НастройкиБухучетаДокумента = Документы.Отпуск.ДанныеДляБухучетаЗарплатыПервичныхДокументов(ЭтотОбъект)["ТаблицаБухучетЗарплаты"];
	
	МенеджерРасчета.ДобавитьДатуНачалаСобытия(ЭтотОбъект.Сотрудник, ЭтотОбъект.ДатаНачалаСобытия);	
	#Вставка
	//1АБ Беляев 16.03.2021 +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = АБ_НеПредоставлятьВычеты;
	//1АБ Беляев 16.03.2021 -
	#КонецВставки
	#Вставка
	//1АБ Беляев 05.04.2021 +
	МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетНочных = АБ_ИспользоватьНеТиповойРасчетНочных;
	МенеджерРасчета.НастройкиНачислений.ИспользоватьНеТиповойРасчетПраздничных = АБ_ИспользоватьНеТиповойРасчетПраздничных;
	//1АБ Беляев 05.04.2021 -
	#КонецВставки
	
КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьНастройкиМенеджераРасчетаПоШаблону")
Процедура АБ_ЗаполнитьНастройкиМенеджераРасчетаПоШаблону(МенеджерРасчета, ШаблонНастроек)
	МенеджерРасчета.УстановитьНастройкиРасчетаПоУмолчанию();
	Для Каждого ЭлементНастроек Из ШаблонНастроек Цикл
		МенеджерРасчета.НастройкиРасчета.Вставить(ЭлементНастроек.Ключ, ЭлементНастроек.Значение);		
	КонецЦикла;
	#Вставка
	//1АБ Беляев +
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = АБ_НеПредоставлятьВычеты;
	//1АБ Беляев -
	#КонецВставки
КонецПроцедуры	

&ИзменениеИКонтроль("ЗаполнитьУдержания")
Процедура АБ_ЗаполнитьУдержания(МенеджерРасчета)
	
	#Удаление
	Если Не РасчетЗарплатыРасширенный.ЭтоМежрасчетнаяВыплата(ЭтотОбъект.ПорядокВыплаты) Тогда
		Возврат;
	КонецЕсли;
	#КонецУдаления	
	#Вставка
	//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
	Если НЕ РассчитыватьУдержания Тогда
		Возврат;
	КонецЕсли;
	//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"
	#КонецВставки
	
	МенеджерРасчета.ЗаполнитьУдержанияСотрудникаЗаПериод(
		ЭтотОбъект.Сотрудник, 
		ЭтотОбъект.ПериодРегистрации, 
		КонецМесяца(ЭтотОбъект.ПериодРегистрации));
	
КонецПроцедуры

//1АБ Беляев 04.07.2021 - Доработка 7 "Изменить дату начала для расчета среднего для единовременной выплаты с периода регистрации на дату начала события"
#Область Доработка_7_СреднийЗаработокДляЕдиновременнойВыплаты
&ИзменениеИКонтроль("ДополнитьНачисленияВыплачиваемыеКОтпуску")
Процедура АБ_ДополнитьНачисленияВыплачиваемыеКОтпуску(ТаблицаНачислений, МенеджерРасчета, ПериодРасчетаЗарплаты, ПараметрыИсправленногоДокумента)
	
	ПредоставляетсяЕдиновременнаяВыплатаКОтпуску =
		ЭтотОбъект.ПредоставитьЕдиновременнуюВыплатуКОтпуску И ЗначениеЗаполнено(ЭтотОбъект.ВидРасчетаЕдиновременнойВыплатыКОтпуску);
		
	ПериодРегистрацииЕдиновременнойВыплаты = ЭтотОбъект.ПериодРегистрации;
	ПериодРегистрацииМатериальнойПомощи = ЭтотОбъект.ПериодРегистрации;
	#Вставка
	//1АБ Беляев +
	НачалоПериода1 = ПериодРегистрации;
	Если Документы.Отпуск.ОтпускНачинаетсяВСледующемМесяце(ЭтотОбъект, НачалоПериода1) И ПредоставляетсяЕдиновременнаяВыплатаКОтпуску Тогда
		ПериодРегистрацииЕдиновременнойВыплаты = НачалоМесяца(ДатаНачалаСобытия);
	КонецЕсли;
	//1АБ Беляев -
	#КонецВставки
		
	// Если потребуется начислять единоразовые начисления и при этом данный документ - исправление,
	// нужно переопределить периоды действия для единоразовых начислений.
	Если ИсправлениеРасчетовБЗККлиентСервер.ЭтоИсправление(ПараметрыИсправленногоДокумента)
		И (ПредоставляетсяЕдиновременнаяВыплатаКОтпуску	Или ЭтотОбъект.ПредоставитьМатериальнуюПомощьПриОтпуске) Тогда
			
		РеквизитыИсправленного = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыИсправленногоДокумента.Ссылка,
			"ПредоставитьЕдиновременнуюВыплатуКОтпуску,ВидРасчетаЕдиновременнойВыплатыКОтпуску,ПредоставитьМатериальнуюПомощьПриОтпуске");
		
		ПервичныйДокумент = ИсправлениеДокументовЗарплатаКадры.ПервыйДокументЦепочкиИсправлений(ПараметрыИсправленногоДокумента.Ссылка);
		ПервичныйПериодРегистрации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПервичныйДокумент, "ПериодРегистрации");
		#Вставка
		ДатаНачалаСобытия1 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПервичныйДокумент, "ДатаНачалаСобытия");
		#КонецВставки
		
		// Если единовременная выплата начислялась и будет начисляться - сохраним ее период в документе-исправлении.
		Если ПредоставляетсяЕдиновременнаяВыплатаКОтпуску
			И РеквизитыИсправленного.ПредоставитьЕдиновременнуюВыплатуКОтпуску И ЗначениеЗаполнено(РеквизитыИсправленного.ВидРасчетаЕдиновременнойВыплатыКОтпуску) Тогда
			ПериодРегистрацииЕдиновременнойВыплаты = ПервичныйПериодРегистрации;
			#Вставка
			ПериодРегистрацииЕдиновременнойВыплаты = НачалоМесяца(ДатаНачалаСобытия1);
			#КонецВставки
		КонецЕсли;
		// Если матпомощь начислялась и будет начисляться - сохраним ее период в документе-исправлении.
		Если ЭтотОбъект.ПредоставитьМатериальнуюПомощьПриОтпуске И РеквизитыИсправленного.ПредоставитьМатериальнуюПомощьПриОтпуске Тогда
			ПериодРегистрацииМатериальнойПомощи = ПервичныйПериодРегистрации;
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаВедущихНачислений = МенеджерРасчета.НовыйВедущиеНачисленияСотрудников();
	
	РегистраторРазовыхНачислений = ДокументыРазовыхНачислений.РегистраторРазовогоНачисления(ЭтотОбъект.Ссылка);
	
	Если ПредоставляетсяЕдиновременнаяВыплатаКОтпуску Тогда
		НовыйИнтервал = ТаблицаНачислений.Добавить();
		НовыйИнтервал.Сотрудник = ЭтотОбъект.Сотрудник;
		НовыйИнтервал.Начисление = ЭтотОбъект.ВидРасчетаЕдиновременнойВыплатыКОтпуску;
		НовыйИнтервал.ДатаНачала = НачалоМесяца(ПериодРегистрацииЕдиновременнойВыплаты);
		НовыйИнтервал.ДатаОкончания = КонецМесяца(ПериодРегистрацииЕдиновременнойВыплаты);
		НовыйИнтервал.ПериодПолученияПоказателей = ЭтотОбъект.ДатаНачалаСобытия;
		НовыйИнтервал.РегистраторРазовогоНачисления = РегистраторРазовыхНачислений;
		
		СтрокаТаблицыВедущих = ТаблицаВедущихНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыВедущих, НовыйИнтервал); 
	КонецЕсли;
	
	Если ЭтотОбъект.ПредоставитьМатериальнуюПомощьПриОтпуске Тогда
		НовыйИнтервал = ТаблицаНачислений.Добавить();
		НовыйИнтервал.Сотрудник = ЭтотОбъект.Сотрудник;
		НовыйИнтервал.Начисление = ЭтотОбъект.ВидРасчетаМатериальнойПомощиПриОтпуске;
		НовыйИнтервал.ДатаНачала = НачалоМесяца(ПериодРегистрацииМатериальнойПомощи);
		НовыйИнтервал.ДатаОкончания = КонецМесяца(ПериодРегистрацииМатериальнойПомощи);
		НовыйИнтервал.ПериодПолученияПоказателей = ЭтотОбъект.ДатаНачалаСобытия;
		НовыйИнтервал.РегистраторРазовогоНачисления = РегистраторРазовыхНачислений;
		
		СтрокаТаблицыВедущих = ТаблицаВедущихНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыВедущих, НовыйИнтервал); 
	КонецЕсли;
	
	Если ТаблицаВедущихНачислений.Количество() > 0 Тогда	
		ЗависимыеНачисления = МенеджерРасчета.ЗависимыеНачисленияРассчитываемыеСРазовыми(ТаблицаВедущихНачислений);
		Для Каждого СтрокаЗависимогоНачисления Из ЗависимыеНачисления Цикл
			Если ПериодРасчетаЗарплаты <> Неопределено
				И ОбщегоНазначенияБЗК.ДатаВИнтервале(СтрокаЗависимогоНачисления.ДатаНачала, ПериодРасчетаЗарплаты.ДатаНачала, ПериодРасчетаЗарплаты.ДатаОкончания, Истина) 
				И ОбщегоНазначенияБЗК.ДатаВИнтервале(СтрокаЗависимогоНачисления.ДатаОкончания, ПериодРасчетаЗарплаты.ДатаНачала, ПериодРасчетаЗарплаты.ДатаОкончания, Истина) Тогда
				
				Продолжить;
			КонецЕсли;	
			
			Если ПериодРасчетаЗарплаты <> Неопределено
				И ОбщегоНазначенияБЗК.ДатаВИнтервале(СтрокаЗависимогоНачисления.ДатаНачала, ПериодРасчетаЗарплаты.ДатаНачала, ПериодРасчетаЗарплаты.ДатаОкончания, Истина) Тогда
				
				НовыйИнтервал = ТаблицаНачислений.Добавить();	
				ЗаполнитьЗначенияСвойств(НовыйИнтервал, СтрокаЗависимогоНачисления);
				НовыйИнтервал.РассчитыватьПоРазовымНачислениямДокумента = Истина;
				НовыйИнтервал.РегистраторРазовогоНачисления = РегистраторРазовыхНачислений;
				НовыйИнтервал.ДатаНачала = КонецДня(ПериодРасчетаЗарплаты.ДатаОкончания) + 1;
			Иначе
				НовыйИнтервал = ТаблицаНачислений.Добавить();	
				ЗаполнитьЗначенияСвойств(НовыйИнтервал, СтрокаЗависимогоНачисления);
				НовыйИнтервал.РассчитыватьПоРазовымНачислениямДокумента = Истина;
				НовыйИнтервал.РегистраторРазовогоНачисления = РегистраторРазовыхНачислений;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
//1АБ Беляев 04.07.2021 - Доработка 7 "Изменить дату начала для расчета среднего для единовременной выплаты с периода регистрации на дату начала события"	
