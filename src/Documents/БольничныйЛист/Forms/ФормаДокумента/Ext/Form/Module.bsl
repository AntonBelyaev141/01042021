#Область Доработка_5_Управление_Расчетом_Удержаний
&НаСервере
Процедура АБ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
	Если Параметры.Ключ.Пустая() Тогда
		УстановитьСвойствоРассчитыватьУдержания(ЭтотОбъект);
	КонецЕсли;
	ЭлементПроверки=Элементы.Найти("РассчитыватьУдержания");
	Если ТипЗнч(ЭлементПроверки) <> Тип("Неопределено") Тогда
	Иначе
		РасчетЗарплатыРасширенныйФормы.РассчитатьУдержанияДополнитьФорму(ЭтотОбъект);
		УстановитьДоступностьПоляРассчитыватьУдержания(ЭтотОбъект);
	КонецЕсли;
	//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"
	
	//1АБ Беляев + Доработка "Не предоставлять вычеты в межрасчет"
	ПроверочныйТип=Элементы.Найти("АБ_НеПредоставлятьВычеты");
	Если НЕ ТипЗнч(ПроверочныйТип) = Тип("Неопределено") Тогда
	Иначе
		ЭлементыГруппаНомерЛисткаНетрудоспособности=Элементы.Найти("ГруппаНомерЛисткаНетрудоспособности");
		Элемент_АБ_НеПредоставлятьВычеты=Элементы.Добавить("АБ_НеПредоставлятьВычеты",Тип("ПолеФормы"),ЭлементыГруппаНомерЛисткаНетрудоспособности);
		Элемент_АБ_НеПредоставлятьВычеты.Заголовок = "Не предоставлять вычеты";
		Элемент_АБ_НеПредоставлятьВычеты.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент_АБ_НеПредоставлятьВычеты.ПутьКДанным = "Объект.АБ_НеПредоставлятьВычеты";
		Элемент_АБ_НеПредоставлятьВычеты.УстановитьДействие("ПриИзменении","АБ_РассчитатьСотрудниковНаКлиенте");		
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект["АБ_НеПредоставлятьВычеты"]=Истина;
	КонецЕсли;
	//1АБ Беляев - Доработка "Не предоставлять вычеты в межрасчет"
КонецПроцедуры

//1АБ Беляев 12.04.2021 + Доработка 5 "Добавить управление расчетом удержаний"
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойствоРассчитыватьУдержания(Форма)
	
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьСвойствоРассчитыватьУдержания(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПоляРассчитыватьУдержания(Форма)
	
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьДоступностьПоляРассчитыватьУдержания(Форма);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьУдержания")
Процедура АБ_ЗаполнитьУдержания(МенеджерРасчета)

	#Удаление
	Если Не ЭтоМежрасчетнаяВыплата(Объект.ПорядокВыплаты) Тогда
		Возврат;
	КонецЕсли;
	#КонецУдаления
	#Вставка
	//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
	Если НЕ Объект.РассчитыватьУдержания Тогда
		Возврат;
	КонецЕсли;
	//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"
	#КонецВставки

	МенеджерРасчета.ЗаполнитьУдержанияСотрудникаЗаПериод(Объект.Сотрудник, Объект.ПериодРегистрации, КонецМесяца(Объект.ПериодРегистрации));

КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьНастройкиМенеджераРасчета")
Процедура АБ_ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты, СохранятьИсправления)

	МенеджерРасчета.ИсключаемыйРегистратор = Объект.Ссылка;

	ИсправлениеДокументовРасчетЗарплаты.НастроитьМенеджерРасчета(МенеджерРасчета, ЭтаФорма, ОписаниеДокумента(ЭтаФорма));

	МенеджерРасчета.НастройкиРасчета.РассчитыватьНачисления = Истина;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьНДФЛ = Истина;
	МенеджерРасчета.НастройкиРасчета.РассчитыватьЗаймы = ПериодРасчетаЗарплаты <> Неопределено;
	#Удаление
	МенеджерРасчета.НастройкиРасчета.РассчитыватьУдержания = ЭтоМежрасчетнаяВыплата(Объект.ПорядокВыплаты);
	#КонецУдаления
	#Вставка
	//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
	МенеджерРасчета.НастройкиРасчета.РассчитыватьУдержания = Объект.РассчитыватьУдержания;
	//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"
	#КонецВставки
	МенеджерРасчета.НастройкиРасчета.РассчитыватьКорректировкиВыплаты = Истина;
	МенеджерРасчета.НастройкиРасчета.СохранятьИсправления = СохранятьИсправления;
	МенеджерРасчета.НастройкиРасчета.РасчетЗарплаты = ПериодРасчетаЗарплаты <> Неопределено;

	МенеджерРасчета.НастройкиУдержаний.РассчитыватьТолькоПоТекущемуДокументу = Истина;

	МенеджерРасчета.НастройкиНДФЛ.Сотрудники = Объект.Сотрудник;
	МенеджерРасчета.НастройкиНДФЛ.ДатаВыплаты = Объект.ПланируемаяДатаВыплаты;
	МенеджерРасчета.НастройкиНДФЛ.ОкончательныйРасчет = Ложь;
	МенеджерРасчета.НастройкиНДФЛ.ДоходПолученНаТерриторииРФ = Объект.ДоходПолученНаТерриторииРФ;

	МенеджерРасчета.НастройкиПособий.Вставить("ЭЛНКарантинПоКоронавирусу", Объект.ЭЛНКарантинПоКоронавирусу);

	ЗасчитыватьДанныеАвансов = Объект.РассчитатьЗарплату;	
	Если ЗасчитыватьДанныеАвансов
		И ИсправлениеДокументовРасчетЗарплатыКлиентСервер.ИсправлениеВТекущемПериоде(ЭтаФорма)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ИсправленныйДокумент, "РассчитатьЗарплату") Тогда
		ЗасчитыватьДанныеАвансов = Ложь
	КонецЕсли;
	МенеджерРасчета.НастройкиНДФЛ.ЗасчитыватьДанныеАвансов = ЗасчитыватьДанныеАвансов;
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки

	Если ПериодРасчетаЗарплаты <> Неопределено Тогда
		МенеджерРасчета.НастройкиЗаймов.Сотрудники = Объект.Сотрудник;
		МенеджерРасчета.НастройкиЗаймов.ДатаПогашения = ПериодРасчетаЗарплаты.ДатаОкончания;
	КонецЕсли;
	МенеджерРасчета.НастройкиБухучета.КоэффициентыСреднегоЗаработкаФССДокумента = КоэффициентыСреднегоЗаработка();
	МенеджерРасчета.НастройкиБухучета.КоэффициентыРаспределенияДенежногоСодержания = Объект.КоэффициентыРаспределенияДенежногоСодержания.Выгрузить();

КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("УдержанияДоступны")
Функция АБ_УдержанияДоступны()

	Если Не ИспользуетсяРасчетЗарплаты Тогда
		Возврат Ложь;
	Иначе
		#Удаление
		Возврат ЭтоМежрасчетнаяВыплата(Объект.ПорядокВыплаты);
		#КонецУдаления
		#Вставка
		//1АБ Беляев 12.04.2021 + Доработка "Добавить управление расчетом удержаний"
		Возврат Объект.РассчитыватьУдержания;
		//1АБ Беляев 12.04.2021 - Доработка "Добавить управление расчетом удержаний"
		#КонецВставки
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура Подключаемый_РассчитыватьУдержанияПриИзменении(Элемент)
	
	//полностью дублируем текст процедуры "Подключаемый_ПорядокВыплатыПриИзменении",
	//но не можем прямо на нее сослаться из-за зацикливания,
	//так как возвращаемся сюда
	Если ЗначениеЗаполнено(Объект.ПорядокВыплаты) Тогда
		ПорядокВыплатыПриИзмененииНаСервере();
		ПодключитьОбработчикРасчетаБезВыводаСообщений();
	Иначе
		ОчиститьРассчитанныеДанные();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
&Перед("Подключаемый_ПорядокВыплатыПриИзменении")
Процедура АБ_Подключаемый_ПорядокВыплатыПриИзменении(Элемент)
	УстановитьСвойствоРассчитыватьУдержания(ЭтотОбъект);
	УстановитьДоступностьПоляРассчитыватьУдержания(ЭтотОбъект);
	УстановитьВидимостьУдержаний();
КонецПроцедуры

//1АБ Беляев 12.04.2021 - Доработка 5 "Добавить управление расчетом удержаний"

//1АБ Беляев +  Доработк "Не предоставлять вычеты в межрасчет"
&НаКлиенте
Процедура АБ_РассчитатьСотрудниковНаКлиенте(Команда)
	АБ_РассчитатьСотрудниковНаСервере();
КонецПроцедуры

&НаСервере
Процедура АБ_РассчитатьСотрудниковНаСервере()
	РассчитатьНаСервере();
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("РассчитатьВсеНаСервере")
Процедура АБ_РассчитатьВсеНаСервере(ОписаниеТаблицы = Неопределено)
	
	ПериодРасчетаЗарплаты = ПериодРасчетаЗарплатыДоНачалаОтсутствия();
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.ПериодРегистрации, Объект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты);
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьИсточникиИзмененийМенеджераРасчета(МенеджерРасчета, ИзмененныеДанные);
	
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	ЗаполнитьПараметрыРасчетаПособияПоНетрудоспособности(МенеджерРасчета);
	МенеджерРасчета.РассчитатьЗарплату();
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("РассчитатьНачисленияНаСервере")
Процедура АБ_РассчитатьНачисленияНаСервере(ОписаниеРассчитываемойТаблицы = Неопределено, СохранятьИсправления = Ложь)
	
	Если Не ИспользуетсяРасчетЗарплаты Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ПериодРасчетаЗарплаты = ПериодРасчетаЗарплатыДоНачалаОтсутствия();
	
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.ПериодРегистрации, Объект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты, СохранятьИсправления);
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки
	ЗаполнитьУдержания(МенеджерРасчета);
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьИсточникиИзмененийМенеджераРасчета(МенеджерРасчета, ИзмененныеДанные);
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	ЗаполнитьПараметрыРасчетаПособияПоНетрудоспособности(МенеджерРасчета);
	МенеджерРасчета.РассчитатьЗарплату();
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ПерезаполнитьНачисления")
Процедура АБ_ПерезаполнитьНачисления(ВыводитьСообщения, Кэш)
	
	Если Не ИспользуетсяРасчетЗарплаты Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьРассчитанныеДанные(Истина);
	
	ЗаполнитьСсылкиНачислений(Ложь);
	
	ТекущийОбъект = ЭтотОбъект.РеквизитФормыВЗначение("Объект");
	Если Не ТекущийОбъект.ДокументГотовКРасчету(ВыводитьСообщения) Тогда
		ОбработатьСообщенияПользователю();
		УстановитьОтметкуНезаполненногоПланируемойДатыВыплаты();
		ТребуетсяОбновитьДанныеСреднегоЗаработка = Истина;
		Возврат;
	КонецЕсли;
	
	ОбновитьДанныеДляРасчетаСреднего();
	ТребуетсяОбновитьДанныеСреднегоЗаработка = Истина;
	
	ПериодРасчетаЗарплаты = ПериодРасчетаЗарплатыДоНачалаОтсутствия();
	
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.ПериодРегистрации, Объект.Организация);
	ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты);
	
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки
	ЗаполнитьНачисления(МенеджерРасчета, ПериодРасчетаЗарплаты, Кэш);
	ЗаполнитьПерерасчеты(МенеджерРасчета);
	ЗаполнитьУдержания(МенеджерРасчета);
	ЗаполнитьПараметрыРасчетаПособияПоНетрудоспособности(МенеджерРасчета);
	
	МенеджерРасчета.РассчитатьЗарплату();
	
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ОбновитьБухучетРезультатовРасчетаНаСервере")
Процедура АБ_ОбновитьБухучетРезультатовРасчетаНаСервере(ИсходныеДанные)
	
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(Объект.ПериодРегистрации, Объект.Организация);
	ПериодРасчетаЗарплаты = ПериодРасчетаЗарплатыДоНачалаОтсутствия();
	ЗаполнитьНастройкиМенеджераРасчета(МенеджерРасчета, ПериодРасчетаЗарплаты);
	#Вставка
	//1АБ Беляев + Доработк "Не предоставлять вычеты в межрасчет"
	МенеджерРасчета.НастройкиНДФЛ.АБ_НеПредоставлятьВычеты = Объект.АБ_НеПредоставлятьВычеты;
	//1АБ Беляев - Доработк "Не предоставлять вычеты в межрасчет"
	#КонецВставки
	МенеджерРасчета.НастройкиБухучета.ПроверятьНеобходимостьПересчетаНДФЛ = МенеджерРасчета.НастройкиРасчета.РассчитыватьНДФЛ;
	ДанныеФормыВДанныеМенеджераРасчета(МенеджерРасчета);
	
	МенеджерРасчета.ЗаполнитьНастройкиОбновленияБухучета(ИсходныеДанные);
	МенеджерРасчета.ОбновитьБухучетРезультатовРасчета();
	РасчетЗарплатыВДанныеФормы(МенеджерРасчета.Зарплата);
	
	РасчетЗарплатыРасширенныйФормы.УстановитьТекущуюСтрокуТаблицыФормы(ЭтотОбъект, ИсходныеДанные.ИмяИсходнойТаблицы, ИсходныеДанные.НомерСтрокиИсходнойТаблицы);
	
КонецПроцедуры
//1АБ Беляев -  Доработк "Не предоставлять вычеты в межрасчет"

#КонецОбласти


